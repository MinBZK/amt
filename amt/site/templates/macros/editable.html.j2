{% macro render_attribute(attribute) -%}
    {{ attribute.capitalize().replace("_", " ") }}
{%- endmacro %}
{% macro show_ai_act_button() %}
    <button id="ai-act-support-tool-modal-button"
            class="utrecht-button utrecht-button--secondary-action utrecht-button--rvo-md utrecht-button-group__align-right"
            onclick="amt.openDynamicModal('ai-act-support-tool')"
            type="button"
            style="float: right">{% trans %}Find your AI Act profile{% endtrans %}</button>
{% endmacro %}
{% macro editable(obj, relative_resource_path, full_resource_path, editable_object = None) %}
    {% if is_parent_editable(editables, full_resource_path) %}
        {% if editable_object is none %}
            {% set editable_object = editables[replace_digits_in_brackets(full_resource_path)] %}
        {% endif %}
        <div hx-target="this" class="amt-editable-block">
            {% if editable_object.children is not none and editable_object.children | length > 0 %}
                {% for child_editable in editable_object.children %}
                    <strong>{{ render_attribute(child_editable.last_path_item() ) }}</strong>:
                    {{ display_value(child_editable.last_path_item() , nested_value(obj, resolve_resource_list_path(full_resource_path, child_editable.relative_resource_path))) }}
                    {% if not loop.last %}<br />{% endif %}
                {% endfor %}
            {% else %}
                {{ nested_value(obj, relative_resource_path) | safe }}
            {% endif %}
            {{ edit_link(base_href, full_resource_path) }}
        </div>
    {% else %}
        <div hx-target="this" class="amt-editable-block">
            {% if editable_object is not none %}
                {% set value = editable_object.value %}
            {% else %}
                {% set value = nested_value(obj, relative_resource_path) %}
            {% endif %}
            {% set key = relative_resource_path.split("/")[-1] %}
            {% if is_nested_enum(obj, relative_resource_path) %}
                <span class="rvo-tag rvo-tag--with-icon rvo-tag--active rvo-tag--success">
                    <span class="utrecht-icon rvo-icon rvo-icon-bevestiging rvo-icon--lg"
                          role="img"></span>
                    {{ nested_enum_value(obj, relative_resource_path, language).display_value | safe }}
                </span>
                {{ edit_link(base_href, full_resource_path) }}
            {% else %}
                {{ display_value(key, value) }}
                {{ edit_link(base_href, full_resource_path) }}
            {% endif %}
        </div>
    {% endif %}
{% endmacro %}
{% macro display_value(key, value) %}
    {% if key == "uri" or key == "link" or key == "upl" %}
        <a class="rvo-link rvo-link--normal" href="{{ value }}">{{ value }}</a>
    {% elif key == "oin" %}
        <a class="rvo-link rvo-link--normal"
           href="https://oinregister.logius.nl/oin-register/{{ value }}">{{ value }}</a>
    {% elif key == "email" %}
        <a class="rvo-link rvo-link--normal" href="mailto:{{ value }}">{{ value }}</a>
    {% elif key == "urn" %}
        <a class="rvo-link rvo-link--normal"
           href="https://task-registry.apps.digilab.network/urns/?version=latest&urn={{ value }}">{{ value }}</a>
    {% elif value is string and value.startswith('http') %}
        <a href="{{ value }}" target="_blank" rel="noopener noreferrer">{{ value }}</a>
    {% elif value is iterable and value is not string %}
        {{ value|join(", ") }}
    {% else %}
        {{ value }}
    {% endif %}
{% endmacro %}
{% macro edit_link(base_href, full_resource_path) %}
    <span class="rvo-link rvo-link--hover rvo-link--with-icon amt-edit-link"
          hx-get="{{ base_href }}/edit?full_resource_path={{ full_resource_path }}"
          hx-swap="outerHTML"
          style="cursor: pointer;
                 float:right">
        <span class="utrecht-icon rvo-icon rvo-icon-bewerken rvo-icon--md rvo-icon--hemelblauw"
              role="img"
              aria-label="{% trans %}Edit{% endtrans %}"></span>
        <a class="rvo-link"
           href="#"
           onclick="event.preventDefault()"
           style="font-size: 14px !important;
                  color: rgb(0, 123, 199) !important">{% trans %}Edit{% endtrans %}</a>
    </span>
{% endmacro %}
{% macro edit(editable_object) %}
    <span hx-target="this">
        <form hx-put="{{ base_href }}/update?full_resource_path={{ editable_object.full_resource_path }}"
              hx-ext="json-enc"
              hx-target-error="#errorContainer-{{ editable_object.safe_html_path() }}"
              method="post"
              hx-headers='{"X-CSRF-Token": "{{ csrftoken }}"}'
              hx-swap="outerHTML"
              id="form-for-{{ editable_object.safe_html_path() }}"
              autocomplete="off">
            <input type="hidden"
                   name="form-id"
                   value="form-for-{{ editable_object.safe_html_path() }}">
            <div class="rvo-layout-grid-container">
                {% if editable_object.implementation_type.type is none %}
                    {# TODO: hardcoded check could be made more elegant #}
                    {% if editable_object.last_path_item() == "ai_act_profile" %}{{ show_ai_act_button() }}{% endif %}
                    <div class="amt-blocks-with-vertical-spacing">
                        {% for child_editable in editable_object.children %}
                            <div>
                                <div id="error-{{ child_editable.safe_html_path() }}"
                                     class="htmx-error-oob margin-top-middle"></div>
                                <strong>{{ render_attribute(child_editable.last_path_item() ) }}</strong>:
                                <br />
                                {{ inline_editor_form_field(child_editable) }}
                            </div>
                        {% endfor %}
                    </div>
                    <div style="text-align: right" class="margin-top-middle">
                        {{ inline_editor_form_buttons(editable_object.full_resource_path) }}
                    </div>
                {% elif editable_object.implementation_type.type == WebFormFieldType.TEXTAREA %}
                    <div id="error-{{ editable_object.safe_html_path() }}"
                         class="htmx-error-oob margin-top-middle"></div>
                    {{ inline_editor_form_field(editable_object) }}
                    <div style="text-align: right" class="margin-top-middle">
                        {{ inline_editor_form_buttons(editable_object.full_resource_path) }}
                    </div>
                {% else %}
                    <div id="error-{{ editable_object.safe_html_path() }}"
                         class="htmx-error-oob margin-top-middle"></div>
                    <div class="rvo-layout-grid rvo-layout-gap--md rvo-layout-grid--division"
                         style="grid-template-columns: 2fr 1fr">
                        {{ inline_editor_form_field(editable_object) }}
                        <div style="text-align: right">{{ inline_editor_form_buttons(editable_object.full_resource_path) }}</div>
                    </div>
                {% endif %}
            </div>
        </form>
        {# we need the errorContainer to keep htmx happy, but we hide the contents #}
        <div id="errorContainer-{{ editable_object.safe_html_path() }}"
             class="display-none"></div>
    </span>
{% endmacro %}
{% macro inline_editor_form_field(editable_object) %}
    <div>
        {% if editable_object.implementation_type.type == WebFormFieldType.TEXTAREA %}
            <!-- TODO: classes utrecht-textarea seem to be missing? wrong NL design version? -->
            <textarea id="field-{{ editable_object.last_path_item() }}"
                      name="{{ editable_object.last_path_item() }}"
                      placeholder=""
                      class="utrecht-textbox utrecht-textarea utrecht-textarea--html-textarea"
                      dir="auto">{{ editable_object.value }}</textarea>
        {% elif editable_object.implementation_type.type == WebFormFieldType.SELECT %}
            <div class="rvo-select-wrapper"
                 style="max-inline-size: clamp(20rem, 40%, 50rem)">
                <select id="field-{{ editable_object.last_path_item() }}"
                        name="{{ editable_object.last_path_item() }}"
                        class="utrecht-select utrecht-select--html-select">
                    {% for e in editable_object.form_options %}
                        <option value="{{ e.value }}"
                                {% if e.value == editable_object.value|string %}selected="selected"{% endif %}>
                            {{ e.display_value | safe }}
                        </option>
                    {% endfor %}
                </select>
            </div>
        {% elif is_nested_enum(editable_object.resource_object, editable_object.relative_resource_path) %}
            {% set value = nested_value(editable_object.resource_object, editable_object.relative_resource_path) %}
            <div class="rvo-select-wrapper">
                <select id="field-{{ editable_object.last_path_item() }}"
                        name="{{ editable_object.last_path_item() }}"
                        class="utrecht-select utrecht-select--html-select">
                    {% for option in nested_enum(editable_object.resource_object, editable_object.relative_resource_path, language) %}
                        <option value="{{ option.value }}"
                                {% if option.value == value %}selected="selected"{% endif %}>
                            {{ option.display_value | safe }}
                        </option>
                    {% endfor %}
                </select>
            </div>
        {% elif editable_object.implementation_type.type == WebFormFieldType.DATE %}
            <input type="date"
                   name="{{ editable_object.last_path_item() }}"
                   value="{{ nested_value(editable_object.resource_object, editable_object.relative_resource_path) }}"
                   class="utrecht-textbox utrecht-textbox--html-input utrecht-textbox--md"
                   dir="auto">
        {% elif editable_object.implementation_type.type == WebFormFieldType.CHECKBOX_MULTIPLE %}
            <div class="utrecht-form-field utrecht-form-field--text rvo-form-field">
                {% set value = nested_value(editable_object.resource_object, editable_object.relative_resource_path) %}
                {% for option in editable_object.form_options %}
                    <div class="rvo-checkbox__group">
                        <label class="rvo-checkbox rvo-checkbox--not-checked" for="{{ option }}">
                            <input id="{{ editable_object.last_path_item() }}-{{ loop.index }}"
                                   name="{{ editable_object.last_path_item() }}"
                                   class="rvo-checkbox__input"
                                   type="checkbox"
                                   {% if option.value is equal_or_includes(value) %}checked="checked"{% endif %}
                                   value="{{ option.value }}" />
                            {{ option.display_value | safe }}
                        </label>
                    </div>
                {% endfor %}
            </div>
        {% else %}
            <input type="text"
                   name="{{ editable_object.last_path_item() }}"
                   value="{{ nested_value(editable_object.resource_object, editable_object.relative_resource_path) }}"
                   class="utrecht-textbox utrecht-textbox--html-input" />
        {% endif %}
    </div>
{% endmacro %}
{% macro inline_editor_form_buttons(full_resource_path) %}
    <button type="submit"
            class="utrecht-button utrecht-button--primary-action utrecht-button--rvo-md">
        {% trans %}Save{% endtrans %}
    </button>
    <button hx-get="{{ base_href }}/cancel?full_resource_path={{ full_resource_path }}"
            hx-swap="outerHTML"
            class="utrecht-button utrecht-button--secondary-action utrecht-button-group__align-right utrecht-button--rvo-md">
        {% trans %}Cancel{% endtrans %}
    </button>
{% endmacro %}
