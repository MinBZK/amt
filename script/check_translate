#!/usr/bin/env bash

# This script is inteded to be used as a pre-commit hook.
# It checks whether Babel translations are updated and compiled, i.e.
# it will fail when there are translations tags present in the source
# files, but are not present in the .po files.

set -o nounset
set -o pipefail
if [[ "${TRACE-0}" == "1" ]]; then
    set -o xtrace
fi

# pre-commit will fail if files are edited, so we need to create
# a temporary directory, such that we can update to .po files.
TEMP_DIR=$(mktemp -d)
mkdir -p ${TEMP_DIR}/amt/locale
trap 'rm -rf "$TEMP_DIR"' EXIT

strip_po () {
    tail -n +20 "$1"
}

difference () {
    d=$(diff <(echo "$1") <(echo "$2"))
    if [[ "${d}" != "" ]];
        then
            echo "Translations not up to date."
            echo "DIFFERENCE:"
            echo "${d}"
            echo ""
            echo "NEW:"
            echo "$2"
            exit 1
    fi
}

main () {
    base="amt/locale/base.pot"
    nl_po="amt/locale/nl_NL/LC_MESSAGES/messages.po"

    old_base=$(strip_po "${base}")

    cp -r amt/locale/* ${TEMP_DIR}/amt/locale/
    pybabel extract -F babel-mapping.ini . -o "${TEMP_DIR}/amt/locale/base.pot" > /dev/null 2>&1
    #pybabel update -i "${TEMP_DIR}/amt/locale/base.pot" -d "${TEMP_DIR}/amt/locale" > /dev/null 2>&1

    new_base=$(strip_po ${TEMP_DIR}/"${base}")

    difference "${old_base}" "${new_base}"

    ./script/check_invalid_translations --filenames "${nl_po}"
}

main
