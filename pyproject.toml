[tool.poetry]
name = "tad"
version = "0.1.0"
description = ""
authors = ["ai-validatie-team <ai-validatie@minbzk.nl>"]
readme = "README.md"
license = "EUPL-1.2"
repository = "https://github.com/MinBZK/tad"
keywords = ["AI", "Validation", "Transparency", "Algorithm"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed"
]
packages = [
    { include = "tad" }
]


[tool.poetry.dependencies]
python = "^3.10"
fastapi = {extras = ["all"], version = "^0.110.3"}
sqlmodel = "^0.0.18"
psycopg = "^3.1.18"
alembic = "^1.13.1"

[tool.poetry.group.test.dependencies]
pytest = "^8.1.1"
coverage = "^7.5.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.3"
pre-commit = "^3.7.0"
pyright = "^1.1.361"
cyclonedx-bom = "^4.4.2"
pip-licenses = "^4.4.0"

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/MinBZK/tad/issues"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Ruff settings: https://docs.astral.sh/ruff/configuration/
[tool.ruff]
line-length = 120
target-version = "py311"
src = ["./tad"]

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = ["I", "SIM", "B", "UP", "F", "E", "S", "C90", "DTZ", "LOG", "PIE", "PT", "ERA", "W", "C", "TRY", "RUF"]
fixable = ["ALL"]
task-tags = ["TODO"]

[tool.ruff.lint.per-file-ignores]
"tad/tests/**.py" = ["S101"]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = true

[tool.coverage.run]
branch = true
command_line = "-m pytest"
relative_files = true

[tool.coverage.report]
fail_under = 95

[tool.coverage.html]
directory = "htmlcov"
title = "tad"


[tool.pytest.ini_options]
testpaths = [
    "tad/tests"
]
