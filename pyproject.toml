[tool.poetry]
name = "tad"
version = "0.1.0"
description = ""
authors = ["ai-validatie-team <ai-validatie@minbzk.nl>"]
readme = "README.md"
license = "EUPL-1.2"
repository = "https://github.com/MinBZK/tad"
keywords = ["AI", "Validation", "Transparency", "Algorithm"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: FastAPI",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed"
]
packages = [
    { include = "tad" }
]


[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.111.0"
sqlmodel = "^0.0.18"
alembic = "^1.13.1"
pydantic = "^2.7.2"
jinja2 = "^3.1.4"
pydantic-settings = "^2.2.1"
psycopg2-binary = "^2.9.9"
uvicorn = {extras = ["standard"], version = "^0.30.1"}
playwright = "^1.44.0"
pytest-playwright = "^0.5.0"
pyyaml = "^6.0.1"


[tool.poetry.group.test.dependencies]
pytest = "^8.2.1"
coverage = "^7.5.3"
httpx = "^0.27.0"
urllib3 = "^2.2.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.4.7"
pre-commit = "^3.7.0"
pyright = "^1.1.365"
liccheck = "^0.9.2"

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/MinBZK/tad/issues"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Ruff settings: https://docs.astral.sh/ruff/configuration/
[tool.ruff]
line-length = 120
target-version = "py311"
src = ["tad","tests"]

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = ["I", "SIM", "B", "UP", "F", "E", "S", "C90", "DTZ", "LOG", "PIE", "PT", "ERA", "W", "C", "TRY", "RUF"]
fixable = ["ALL"]
task-tags = ["TODO"]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["S101"]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.pyright]
pythonVersion = "3.11"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = true
reportUnnecessaryIsInstance = false
exclude = [
    "tad/migrations",
    ".venv"
]

[tool.coverage.run]
branch = true
command_line = "-m pytest"
relative_files = true # needed for sonarcloud code coverage
omit = [
    "tests/*"
]


[tool.coverage.report]
fail_under = 95

[tool.coverage.html]
directory = "htmlcov"
title = "tad"


[tool.pytest.ini_options]
testpaths = [
    "tests"
]
addopts = "--strict-markers"
filterwarnings = [
    "ignore::UserWarning"
]

[tool.liccheck]
level = "PARANOID"
dependencies = true
authorized_licenses = [
    "Apache Software",
    "Artistic",
    "BSD",
    "GNU General Public License v2 or later (GPLv2+)",
    "GNU General Public License (GPL)",
    "GNU Library or Lesser General Public License (LGPL)",
    "MIT",
    "Apache Software",
    "The Unlicense (Unlicense)",
    "ISC License (ISCL)",
    "Mozilla Public License 2.0 (MPL 2.0)",
    "Python Software Foundation"
]
