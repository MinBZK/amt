name: release

on:
  push:
    tags:
      - 'v*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          path: 'source/tad/'

      - name: get commit hash
        id: get_commit_hash
        run: |
          cd source/tad/
          echo "commit_hash=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"


      - name: Get GHCR package hash
        id: get_package_hash
        run: |
            container_id=$(gh api --paginate -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /orgs/MinBZK/packages/container/tad/versions | jq -r '.[] | select(.metadata.container.tags | contains(["${{ github.ref_name }} }}"])) | .name')
            echo "container_id=$container_id" >> "$GITHUB_OUTPUT"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Print deploy hash and environment
        run: |
           echo "Container ID: ${{ steps.get_package_hash.outputs.container_id }}"
           echo "Version:  ${{ github.ref_name }}"
           echo "Actor: ${{ github.actor}}"
           echo "Commit: ${{ steps.get_commit_hash.outputs.commit_hash }}"

      - name: check correct name
        run: |
            if [ -z "${{steps.get_package_hash.outputs.container_id}}" ]; then
              echo "Variable is empty. Failing the workflow."
              exit 1
            fi

      - uses: actions/checkout@v4
        with:
          repository: 'minbzk/ai-validation-infra'
          ref: main
          token: ${{ secrets.GH_PAT }}

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Make changes to the file
        run: |
          sed -i 's/newTag: .*$/newTag: ${{ github.ref_name }}@${{ steps.get_package_hash.outputs.container_id }}/g' apps/tad/overlays/production/kustomization.yaml
          sed -i 's/commithash: .*$/commithash: ${{ steps.get_commit_hash.outputs.commit_hash }}/g' apps/tad/overlays/production/kustomization.yaml
          sed -i 's|minbzk.github.io/version: .*$|minbzk.github.io/version: ${{ github.ref_name }}|g' apps/tad/overlays/production/kustomization.yaml
          git add apps/tad/overlays/production/kustomization.yaml

      - name: show changes
        run: git diff --staged

      - name: push changes
        run: |
          git commit -m "Update tad overlay production tag ${{ steps.get_package_hash.outputs.container_id }} by actor ${{ github.actor}}"
          git push --force-with-lease
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
